package ponyvet.gui.pedido;

import java.awt.event.KeyEvent;
import java.awt.Point;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import ponyvet.config.ConfiguracionesGenerales;
import ponyvet.controller.articulo.ArticuloController;
import ponyvet.gui.articulo.JDFormularioArticulo;
import ponyvet.modelo.entidades.articulo.Articulo;
import ponyvet.utilities.Validar;

public class JDAgregarArticulo extends javax.swing.JDialog {

    public JDAgregarArticulo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        actualizarTabla("");
    }

    public static void actualizarTabla(String keywords) {
        DefaultTableModel modelo_actual = (DefaultTableModel) tableListaArticulos.getModel();
        tableListaArticulos.setModel(ArticuloController.getModelArticulosCorto(modelo_actual, keywords, ArticuloController.PEDIDOS));
    }
    
    public void agregarArticulo(int row, String cantidadStr) {
        if (Validar.isFloat(cantidadStr) && row >= 0) {
            float cantidad = Float.parseFloat(cantidadStr);
            if (cantidad > 0 && cantidad < ConfiguracionesGenerales.MAXIMA_CANTIDAD_ARTICULOS) {
                String clave = (String) tableListaArticulos.getValueAt(row, 0);
                int index = JFPedido.buscarIndexArticulo(clave);
                if (index == -1) {
                    Articulo art = ArticuloController.findByClave(clave);
                    if (art.isGranel()) {
                        JFPedido.agregarArticulo(clave, cantidad);
                        this.dispose();
                    } else {
                        if (cantidad % 1 == 0) { //Si es un numero entero
                            JFPedido.agregarArticulo(clave, cantidad);
                            this.dispose();
                        } else {
                            JOptionPane.showMessageDialog(null,
                                    "Este artículo no se puede pedir a granel. Ingresa un número entero sin decimales",
                                    "Cantidad inválidad",
                                    JOptionPane.ERROR_MESSAGE);
                        }
                    }
                } else {
                    this.dispose();
                    JOptionPane.showMessageDialog(null,
                            "El artículo ya está agregado en el pedido actual. Puedes agregar más unidades\n"
                            + "del artículo con el botón \"Cantidad\" o dando doble clic derecho sobre el registro.",
                            "Artículo ya agregado",
                            JOptionPane.WARNING_MESSAGE);
                    JFPedido.tablePedidos.setRowSelectionInterval(index, index);
                }
            } else {
                JOptionPane.showMessageDialog(null,
                        "Cantidad incorrecta. Debes ingresar un valor mayor a cero y menor a " + ConfiguracionesGenerales.MAXIMA_CANTIDAD_ARTICULOS,
                        "Cantidad inválida", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null,
                    "La cantidad está incorrecta, debes ingresar un numero entero o con decimales.",
                    "Cantidad inválida",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollBar1 = new javax.swing.JScrollBar();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableListaArticulos = new ponyvet.gui.utilities.JTableCustom();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agregar artículo al pedido");

        tableListaArticulos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Clave", "Descripcion", "Existencia", "Precio", "L", "G"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableListaArticulos.setNextFocusableComponent(txtCantidad);
        tableListaArticulos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableListaArticulosMouseClicked(evt);
            }
        });
        tableListaArticulos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableListaArticulosKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tableListaArticulos);
        if (tableListaArticulos.getColumnModel().getColumnCount() > 0) {
            tableListaArticulos.getColumnModel().getColumn(0).setMinWidth(60);
            tableListaArticulos.getColumnModel().getColumn(0).setPreferredWidth(150);
            tableListaArticulos.getColumnModel().getColumn(0).setMaxWidth(150);
            tableListaArticulos.getColumnModel().getColumn(2).setMinWidth(100);
            tableListaArticulos.getColumnModel().getColumn(2).setPreferredWidth(100);
            tableListaArticulos.getColumnModel().getColumn(2).setMaxWidth(100);
            tableListaArticulos.getColumnModel().getColumn(3).setMinWidth(60);
            tableListaArticulos.getColumnModel().getColumn(3).setPreferredWidth(150);
            tableListaArticulos.getColumnModel().getColumn(3).setMaxWidth(150);
            tableListaArticulos.getColumnModel().getColumn(4).setMinWidth(20);
            tableListaArticulos.getColumnModel().getColumn(4).setPreferredWidth(20);
            tableListaArticulos.getColumnModel().getColumn(4).setMaxWidth(20);
            tableListaArticulos.getColumnModel().getColumn(5).setMinWidth(20);
            tableListaArticulos.getColumnModel().getColumn(5).setPreferredWidth(20);
            tableListaArticulos.getColumnModel().getColumn(5).setMaxWidth(20);
        }

        jPanel2.setFocusable(false);
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Buscar:");
        jLabel1.setFocusable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel2.add(jLabel1, gridBagConstraints);

        txtBuscar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.6;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel2.add(txtBuscar, gridBagConstraints);

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/icons8-search-22.png"))); // NOI18N
        jButton2.setText("Buscar(Enter)");
        jButton2.setFocusPainted(false);
        jButton2.setFocusable(false);
        jButton2.setMaximumSize(new java.awt.Dimension(136, 26));
        jButton2.setMinimumSize(new java.awt.Dimension(136, 26));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel2.add(jButton2, gridBagConstraints);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/icons8-add-22.png"))); // NOI18N
        jButton3.setText("Crear nuevo artículo");
        jButton3.setFocusPainted(false);
        jButton3.setFocusable(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel2.add(jButton3, gridBagConstraints);

        jPanel3.setFocusable(false);
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Cantidad:");
        jLabel2.setFocusable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(jLabel2, gridBagConstraints);

        txtCantidad.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtCantidad.setText("1.0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(txtCantidad, gridBagConstraints);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/icons8-checked-22.png"))); // NOI18N
        jButton1.setText("SELECCIONAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(2, 197, 2, 2);
        jPanel3.add(jButton1, gridBagConstraints);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (tableListaArticulos.getSelectedRowCount() > 0) {
            agregarArticulo(tableListaArticulos.getSelectedRow(), txtCantidad.getText());
        } else {
            JOptionPane.showMessageDialog(null,
                            "Debe seleccionar un registro de la tabla o también puedes dar clic derecho\ndos veces sobre el registro para agregarlo al pedido.",
                            "Registro no seleccionado.",
                            JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String keywords = ((JTextField)evt.getSource()).getText();
            actualizarTabla(keywords);
            tableListaArticulos.requestFocus();
            if(tableListaArticulos.getRowCount() > 0){
                tableListaArticulos.setRowSelectionInterval(0, 0);
            }
        }
    }//GEN-LAST:event_txtBuscarKeyPressed

    private void tableListaArticulosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableListaArticulosMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2 && tableListaArticulos.getSelectedRowCount() > 0) {
            Point point = evt.getPoint();
            agregarArticulo(tableListaArticulos.rowAtPoint(point), "1.0");
        }
    }//GEN-LAST:event_tableListaArticulosMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String keywords = (txtBuscar.getText());
        actualizarTabla(keywords);
        tableListaArticulos.requestFocus();
        if (tableListaArticulos.getRowCount() > 0) {
            tableListaArticulos.setRowSelectionInterval(0, 0);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        JDFormularioArticulo formulario = new JDFormularioArticulo(new JFrame(), true, null);
        formulario.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tableListaArticulosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableListaArticulosKeyPressed
        // TODO add your handling code here:
         if(tableListaArticulos.getSelectedRowCount() > 0){
            if(evt.getKeyCode() == KeyEvent.VK_ADD || evt.getKeyCode() == KeyEvent.VK_PLUS){
                if (!Validar.isFloat(txtCantidad.getText())) {
                    txtCantidad.setText("1.0");
                }
                float cantidadActual = Float.parseFloat(txtCantidad.getText());
                cantidadActual++;
                txtCantidad.setText(String.valueOf(cantidadActual));
            }else if(evt.getKeyCode() == KeyEvent.VK_MINUS || evt.getKeyCode() == 109){
                if (!Validar.isFloat(txtCantidad.getText())) {
                    txtCantidad.setText("2.0");
                }
                float cantidadActual = Float.parseFloat(txtCantidad.getText());
                cantidadActual--;
                if (cantidadActual > 0) {
                    txtCantidad.setText(String.valueOf(cantidadActual));
                }else{
                    JOptionPane.showMessageDialog(null, "La cantidad no puede ser menor o igual a 0", "Cantidad inválida.", JOptionPane.ERROR_MESSAGE);
                 }
             } else {
                 if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                     agregarArticulo(tableListaArticulos.getSelectedRow(), txtCantidad.getText());
                 }
             }
        }
    }//GEN-LAST:event_tableListaArticulosKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane2;
    public static ponyvet.gui.utilities.JTableCustom tableListaArticulos;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCantidad;
    // End of variables declaration//GEN-END:variables
}